{
  "watch": {
    "metadata": {
      "window_period": "5m",
      "required_failures": 3
    },
    "trigger": {
      "schedule": {
        "interval": "5s"
      }
    },
    "input": {
      "search": {
        "request": {
          "indices": [
            "cef-ssh-*"
          ],
          "types": "syslog",
          "body": {
            "query": {
              "bool": {
                "filter": [
                  {
                    "terms": {
                      "categoryBehaviour": [
                        "cowrie.login.success",
                        "cowrie.login.failed"
                      ]
                    }
                  },
                  {
                    "exists": {
                      "field": "destinationUserName"
                    }
                  }
                ]
              }
            },
            "aggregations": {
              "users": {
                "terms": {
                  "field": "destinationUserName",
                  "size": 1500,
                  "min_doc_count": 4
                },
                "aggs": {
                  "times": {
                    "terms": {
                      "field": "@timestamp",
                      "size": 15000,
                      "order": {
                        "_term": "asc"
                      }
                    },
                    "aggs": {
                      "access": {
                        "terms": {
                          "field": "categoryBehaviour",
                          "size": 1
                        }
                      }
                    }
                  }
                }
              }
            },
            "size": 0
          }
        }
      }
    },
    "condition": {
      "script": {
        "inline": "if (ctx.payload.aggregations == null && ctx.payload.aggregations.users.buckets.size() == 0) return false; for (user in ctx.payload.aggregations.users.buckets) { def failed = 0; for (time in user.times.buckets) { if (time.access.buckets[0].key == 'cowrie.login.failed') {failed += 1;} else { if (failed >= ctx.metadata.required_failures) { return true; } else { failed=0; } } } } return false;"
      }
    },
    "transform": {
      "script": "def users=[:];  for (user in ctx.payload.aggregations.users.buckets) { def times = []; def failed = 0; for (time in user.times.buckets) { if (time.access.buckets[0].key == 'cowrie.login.failed') {failed += 1;} else { if (failed >= ctx.metadata.required_failures) { times.add(time.key_as_string); } failed = 0; } } if (times.length > 0) {users[user.key] = times;} }  return users;"
    },
    "actions": {
      "log": {
        "logging": {
          "text": "More than {{ctx.metadata.required_failures}} denied logins, followed by access granted, by the same user: {{ctx.payload}}"
        }
      },
      "index_payload": {
        "transform": {
          "script": "return ['_doc':ctx.payload.entrySet().stream().flatMap(value -> value.getValue().stream().map(timestamp -> ['alert':true,'@timestamp':timestamp,'destinationUserName':value.getKey()])).collect(Collectors.toList())];"
        },
        "index": {
          "index": "cef-ssh-watch-results",
          "doc_type": "brute_force"
        }
      }
    }
  }
}